{"version":3,"sources":["webpack:///./assets/img/index.png","webpack:///./pages/index.vue?bdaa","webpack:///./pages/index.vue?ff57","webpack:///pages/index.vue","webpack:///./pages/index.vue"],"names":["module","exports","__webpack_require__","p","staticRenderFns","_h","this","$createElement","_c","_self","staticClass","_v","attrs","src","alt","pagesvue_type_script_lang_js_","data","addressFilterValue","infoBox","fullScreen","fullScreenRestore","scrollTop","scrollLeft","computed","Object","objectSpread","vuex_esm","hasError","listErrors","length","hasPendingTx","txsToRender","addressFilter","set","value","get","$store","state","metamask","tokensList","label","tokenSelectLoading","editor","$refs","listEditor","filteredTokenList","_this","results","filter","token","toLowerCase","includes","dispatch","address","symbol","strategy","distribution","commit","tokenValidationClass","formValidationClass","decimals","rawList","mounted","window","indexPageComponent","methods","checkList","sendButtonAction","_sendButtonAction","asyncToGenerator","regeneratorRuntime","mark","_callee","_ref","wrap","_context","prev","next","$nuxt","$loading","start","sent","finish","stop","_x","apply","arguments","prepopulate","$snackbar","open","message","type","position","actionText","duration","onAction","onFullScreen","cm","getWrapperElement","pageYOffset","pageXOffset","classList","add","remove","scrollTo","refresh","onTokenSelect","selectedToken","beforeRouteEnter","to","from","vm","name","$router","go","prevRoute","component","componentNormalizer","_vm","_m","id","placeholder","icon","open-on-focus","expanded","rounded","loading","on","select","scopedSlots","_u","key","fn","props","_s","option","model","callback","$$v","expression","ref","options","theme","lineNumbers","slot","active","closable","has-icon","role","update:active","$event","_l","error","index","icon-right","isAlreadyPressed","click","class","is-collapsed","icon-left","currentCheck","method","_e","txHash","status","txStatusClass","href","txExplorerUrl","target","txHashToRender","__webpack_exports__"],"mappings":"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","file":"8b3190102ba0db8db913.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/cf51c19.png\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"columns\"},[_c('div',{staticClass:\"column is-two-thirds-desktop is-7-widescreen\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"subtitle\"},[_c('p',[_vm._v(\"\\n        Take a look at YouTube video:\\n        \"),_c('nuxt-link',{attrs:{\"to\":\"/tutorial\"}},[_vm._v(\"tutorial\")])],1),_vm._v(\" \"),_c('p',[_vm._v(\"Please provide Token Address, CSV file with addresses\")]),_vm._v(\" \"),_vm._m(1)]),_vm._v(\" \"),_c('div',{staticClass:\"columns\"},[_c('div',{staticClass:\"column is-four-fifths\"},[_c('b-field',{attrs:{\"label\":\"Token Address\"}},[_c('b-autocomplete',{attrs:{\"id\":\"token-address-input\",\"data\":_vm.filteredTokenList,\"placeholder\":\"Select your Token\",\"icon\":\"magnify\",\"open-on-focus\":\"\",\"expanded\":\"\",\"rounded\":\"\",\"loading\":_vm.tokenSelectLoading},on:{\"select\":_vm.onTokenSelect},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [_vm._v(\"\\n              \"+_vm._s(props.option.label)+\"\\n            \")]}}]),model:{value:(_vm.addressFilter),callback:function ($$v) {_vm.addressFilter=$$v},expression:\"addressFilter\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"column\"},[_c('b-field',{attrs:{\"label\":\"Decimals\"}},[_c('b-input',{attrs:{\"rounded\":\"\"},model:{value:(_vm.decimals),callback:function ($$v) {_vm.decimals=$$v},expression:\"decimals\"}})],1)],1)]),_vm._v(\" \"),_c('b-field',{attrs:{\"label\":\"List of Addresses in CSV\"}},[_c('div',{staticClass:\"cm-container\"},[_c('no-ssr',[_c('codemirror',{ref:\"listEditor\",attrs:{\"options\":{\n              theme: 'rubyblue',\n              lineNumbers: true\n            }},model:{value:(_vm.rawList),callback:function ($$v) {_vm.rawList=$$v},expression:\"rawList\"}}),_vm._v(\" \"),_c('div',{staticClass:\"no-ssr-loading\",attrs:{\"slot\":\"placeholder\"},slot:\"placeholder\"})],1)],1)]),_vm._v(\" \"),_c('b-notification',{attrs:{\"active\":_vm.hasError,\"closable\":false,\"type\":\"is-danger\",\"has-icon\":\"\",\"role\":\"alert\"},on:{\"update:active\":function($event){_vm.hasError=$event}}},_vm._l((_vm.listErrors),function(error,index){return _c('ul',{key:index},[_c('li',[_vm._v(\"\\n          \"+_vm._s(error)+\"\\n        \")])])}),0),_vm._v(\" \"),_c('div',{staticClass:\"buttons\"},[_c('b-button',{staticClass:\"is-next\",attrs:{\"id\":\"send-button\",\"type\":\"is-primary\",\"icon-right\":\"arrow-right\",\"rounded\":\"\",\"loading\":_vm.isAlreadyPressed || _vm.hasPendingTx},on:{\"click\":function($event){return _vm.sendButtonAction({ editor: _vm.editor })}}},[_vm._v(\"\\n        Send\\n      \")]),_vm._v(\" \"),_c('b-button',{attrs:{\"type\":\"is-success\",\"rounded\":\"\"},on:{\"click\":_vm.prepopulate}},[_vm._v(\"\\n        Show Example CSV\\n      \")]),_vm._v(\" \"),_c('no-ssr',[_c('b-button',{class:{ 'is-collapsed': _vm.fullScreen },attrs:{\"type\":\"is-fullscreen\",\"rounded\":\"\",\"icon-left\":_vm.fullScreen ? 'arrow-collapse' : 'arrow-expand'},on:{\"click\":_vm.onFullScreen}})],1)],1),_vm._v(\" \"),_c('b-message',{attrs:{\"type\":\"is-success\",\"active\":_vm.isAlreadyPressed},on:{\"update:active\":function($event){_vm.isAlreadyPressed=$event}}},[_vm._v(\"\\n      \"+_vm._s(_vm.currentCheck.method)+\" from \"+_vm._s(_vm.currentCheck.from)),(_vm.currentCheck.to)?_c('span',[_vm._v(\" to \")]):_vm._e(),_vm._v(\" \"+_vm._s(_vm.currentCheck.to)+\"\\n    \")]),_vm._v(\" \"),_c('b-message',{attrs:{\"type\":\"is-warning\",\"active\":_vm.hasPendingTx},on:{\"update:active\":function($event){_vm.hasPendingTx=$event}}},[_vm._v(\"\\n      There is a pending batch of transactions from your previous multisend... Please wait for it\\n      to be mined, so you can receive the remaining balance\\n    \")]),_vm._v(\" \"),(_vm.txsToRender.length > 0)?_c('div',{staticClass:\"token-field\"},[_c('div',{staticClass:\"label\"},[_vm._v(\"Multisend transactions\")]),_vm._v(\" \"),_c('ol',{staticClass:\"txs\"},_vm._l((_vm.txsToRender),function(ref){\n            var txHash = ref.txHash;\n            var status = ref.status;\nreturn _c('li',{key:txHash,staticClass:\"txs__item\",class:_vm.txStatusClass(status)},[_c('div',{staticClass:\"txs__status\"}),_vm._v(\" \"),_c('a',{staticClass:\"txs__address\",attrs:{\"href\":_vm.txExplorerUrl('multisendTxs', txHash),\"target\":\"_blank\"}},[_vm._v(\"\\n            \"+_vm._s(_vm.txHashToRender('multisendTxs', txHash))+\"\\n          \")])])}),0)]):_vm._e()],1),_vm._v(\" \"),_vm._m(2)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h1',{staticClass:\"title is-spaced\"},[_vm._v(\"Welcome to Token \"),_c('span',[_vm._v(\" MultiSender \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"\\n        This Dapp supports the following networks: \"),_c('br'),_vm._v(\"\\n        ETH-Mainnet, POA-Network, Ropsten, Rinkeby, Kovan, Görli, xDai\\n      \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"column is-hidden-touch\"},[_c('div',{staticClass:\"wrap-image wrap-image--token\"},[_c('img',{staticClass:\"wrap-image__images\",attrs:{\"src\":require(\"assets/img/index.png\"),\"alt\":\"\"}})])])}]\n\nexport { render, staticRenderFns }","import mod from \"-!../node_modules/babel-loader/lib/index.js??ref--2-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/babel-loader/lib/index.js??ref--2-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","<template>\n  <div class=\"columns\">\n    <div class=\"column is-two-thirds-desktop is-7-widescreen\">\n      <h1 class=\"title is-spaced\">Welcome to Token <span> MultiSender </span></h1>\n      <div class=\"subtitle\">\n        <p>\n          Take a look at YouTube video:\n          <nuxt-link to=\"/tutorial\">tutorial</nuxt-link>\n        </p>\n        <p>Please provide Token Address, CSV file with addresses</p>\n        <p>\n          This Dapp supports the following networks: <br />\n          ETH-Mainnet, POA-Network, Ropsten, Rinkeby, Kovan, Görli, xDai\n        </p>\n      </div>\n      <div class=\"columns\">\n        <div class=\"column is-four-fifths\">\n          <b-field label=\"Token Address\">\n            <b-autocomplete\n              id=\"token-address-input\"\n              v-model=\"addressFilter\"\n              :data=\"filteredTokenList\"\n              placeholder=\"Select your Token\"\n              icon=\"magnify\"\n              open-on-focus\n              expanded\n              rounded\n              :loading=\"tokenSelectLoading\"\n              @select=\"onTokenSelect\"\n            >\n              <template slot-scope=\"props\">\n                {{ props.option.label }}\n              </template>\n            </b-autocomplete>\n          </b-field>\n        </div>\n        <div class=\"column\">\n          <b-field label=\"Decimals\">\n            <b-input v-model=\"decimals\" rounded></b-input>\n          </b-field>\n        </div>\n      </div>\n      <b-field label=\"List of Addresses in CSV\">\n        <div class=\"cm-container\">\n          <no-ssr>\n            <codemirror\n              ref=\"listEditor\"\n              v-model=\"rawList\"\n              :options=\"{\n                theme: 'rubyblue',\n                lineNumbers: true\n              }\"\n            ></codemirror>\n            <div slot=\"placeholder\" class=\"no-ssr-loading\"></div>\n          </no-ssr>\n        </div>\n      </b-field>\n      <b-notification\n        :active.sync=\"hasError\"\n        :closable=\"false\"\n        type=\"is-danger\"\n        has-icon\n        role=\"alert\"\n      >\n        <ul v-for=\"(error, index) in listErrors\" :key=\"index\">\n          <li>\n            {{ error }}\n          </li>\n        </ul>\n      </b-notification>\n\n      <!-- <div class=\"label\">\n        Distribution Strategy\n      </div>\n      <div class=\"field\">\n        <b-radio v-model=\"strategy\" size=\"is-medium\" :native-value=\"'push'\">\n          Push\n        </b-radio>\n      </div>\n      <div class=\"field\">\n        <b-radio v-model=\"strategy\" size=\"is-medium\" :native-value=\"'pull'\">\n          Pull\n        </b-radio>\n      </div> -->\n      <div class=\"buttons\">\n        <b-button\n          id=\"send-button\"\n          type=\"is-primary\"\n          class=\"is-next\"\n          icon-right=\"arrow-right\"\n          rounded\n          :loading=\"isAlreadyPressed || hasPendingTx\"\n          @click=\"sendButtonAction({ editor })\"\n        >\n          Send\n        </b-button>\n        <b-button type=\"is-success\" rounded @click=\"prepopulate\">\n          Show Example CSV\n        </b-button>\n        <no-ssr>\n          <b-button\n            :class=\"{ 'is-collapsed': fullScreen }\"\n            type=\"is-fullscreen\"\n            rounded\n            :icon-left=\"fullScreen ? 'arrow-collapse' : 'arrow-expand'\"\n            @click=\"onFullScreen\"\n          ></b-button>\n        </no-ssr>\n      </div>\n      <b-message type=\"is-success\" :active.sync=\"isAlreadyPressed\">\n        {{ currentCheck.method }} from {{ currentCheck.from\n        }}<span v-if=\"currentCheck.to\"> to </span> {{ currentCheck.to }}\n      </b-message>\n      <b-message type=\"is-warning\" :active.sync=\"hasPendingTx\">\n        There is a pending batch of transactions from your previous multisend... Please wait for it\n        to be mined, so you can receive the remaining balance\n      </b-message>\n      <div v-if=\"txsToRender.length > 0\" class=\"token-field\">\n        <div class=\"label\">Multisend transactions</div>\n        <ol class=\"txs\">\n          <li\n            v-for=\"{ txHash, status } in txsToRender\"\n            :key=\"txHash\"\n            class=\"txs__item\"\n            :class=\"txStatusClass(status)\"\n          >\n            <div class=\"txs__status\"></div>\n            <a :href=\"txExplorerUrl('multisendTxs', txHash)\" class=\"txs__address\" target=\"_blank\">\n              {{ txHashToRender('multisendTxs', txHash) }}\n            </a>\n          </li>\n        </ol>\n      </div>\n    </div>\n    <div class=\"column is-hidden-touch\">\n      <div class=\"wrap-image wrap-image--token\">\n        <img src=\"~assets/img/index.png\" alt=\"\" class=\"wrap-image__images\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n/* eslint-disable no-console */\nimport { mapState, mapActions, mapGetters } from 'vuex'\n\nexport default {\n  data() {\n    return {\n      addressFilterValue: '',\n      infoBox: 'Checking the list for possible errors...',\n      fullScreen: false,\n      fullScreenRestore: {\n        scrollTop: 0,\n        scrollLeft: 0\n      }\n    }\n  },\n  computed: {\n    ...mapState('distribution', [\n      'rawList',\n      'strategy',\n      'listErrors',\n      'isAlreadyPressed',\n      'currentCheck'\n    ]),\n    ...mapState('metamask', ['tokensList']),\n    ...mapGetters('txStorage', ['txsToRender']),\n    ...mapGetters('txHashKeeper', ['txExplorerUrl', 'txHashToRender', 'txStatusClass']),\n    hasError() {\n      return this.listErrors.length > 0\n    },\n    hasPendingTx() {\n      return this.txsToRender.length > 0\n    },\n    addressFilter: {\n      set(value) {\n        this.addressFilterValue = value\n      },\n      get() {\n        if (this.addressFilterValue === '0x000000000000000000000000000000000000bEEF') {\n          return this.$store.state.metamask.tokensList[0].label\n        }\n        return this.addressFilterValue\n      }\n    },\n    tokenSelectLoading() {\n      return this.$store.state.metamask.tokensList.length === 0\n    },\n    editor() {\n      // get current editor object\n      return this.$refs.listEditor.editor\n    },\n    filteredTokenList() {\n      const tokensList = this.$store.state.metamask.tokensList\n      if (this.addressFilter) {\n        const results = tokensList.filter(token => {\n          return token.label.toLowerCase().includes(this.addressFilter.toLowerCase())\n        })\n\n        if (!results.length) {\n          this.$store.dispatch('token/setTokenAddress', {\n            address: this.addressFilter,\n            label: this.addressFilter,\n            symbol: ''\n          })\n        }\n        return results\n      } else {\n        return tokensList\n      }\n    },\n    strategy: {\n      get() {\n        return this.$store.state.distribution.strategy\n      },\n      set(strategy) {\n        this.$store.commit('distribution/SET_STRATEGY', strategy)\n      }\n    },\n    tokenValidationClass: {\n      get() {\n        return this.$store.state.token.address.formValidationClass\n      }\n    },\n    decimals: {\n      get() {\n        return this.$store.state.token.decimals\n      },\n      set(decimals) {\n        this.$store.commit('token/SET_DECIMALS', decimals)\n      }\n    },\n    rawList: {\n      get() {\n        return this.$store.state.distribution.rawList\n      },\n      set(rawList) {\n        this.$store.commit('distribution/SET_RAWLIST', rawList)\n      }\n    }\n  },\n  mounted: function() {\n    window.indexPageComponent = this\n  },\n  methods: {\n    ...mapActions({\n      checkList: 'distribution/checkList'\n    }),\n    async sendButtonAction({ editor }) {\n      this.$nuxt.$loading.start()\n      const result = await this.checkList({ editor })\n      if (!result) {\n        this.$nuxt.$loading.finish()\n      }\n    },\n    prepopulate() {\n      // Just for testing\n      // this.addressFilter = '0xfab46e002bbf0b4509813474841e0716e6730136'\n      // this.onTokenSelect({\n      //   label: 'FAU - 0xfab46e002bbf0b4509813474841e0716e6730136',\n      //   value: '0xfab46e002bbf0b4509813474841e0716e6730136',\n      //   symbol: 'FAU'\n      // })\n      this.$snackbar.open({\n        message: 'To get an ERC20 test token click',\n        type: 'is-success',\n        position: 'is-top',\n        actionText: 'Receive',\n        duration: 10000,\n        onAction: () => {\n          window.open('https://peppersec.github.io/erc20faucet/', '_blank')\n        }\n      })\n      this.rawList = `0xCBA5018De6b2b6F89d84A1F5A68953f07554765e,12\\n0xa6Bf70bd230867c870eF13631D7EFf1AE8Ab85c9,113.45\\n0x00b5F428905DEA1a67940093fFeaCeee58cA91Ae,1.049\\n0x00fC79F38bAf0dE21E1fee5AC4648Bc885c1d774,1`\n    },\n    onFullScreen() {\n      this.fullScreen = !this.fullScreen\n\n      const cm = this.editor\n      const wrap = cm.getWrapperElement()\n\n      if (this.fullScreen) {\n        this.fullScreenRestore = {\n          scrollTop: window.pageYOffset,\n          scrollLeft: window.pageXOffset\n        }\n        wrap.classList.add('CodeMirror-fullscreen')\n      }\n      if (!this.fullScreen) {\n        wrap.classList.remove('CodeMirror-fullscreen')\n        window.scrollTo(this.fullScreenRestore.scrollLeft, this.fullScreenRestore.scrollTop)\n      }\n      cm.refresh()\n    },\n    onTokenSelect(selectedToken) {\n      if (selectedToken) {\n        this.$store.dispatch('token/setTokenAddress', {\n          address: selectedToken.value,\n          label: selectedToken.label,\n          symbol: selectedToken.symbol\n        })\n      }\n    }\n  },\n  beforeRouteEnter(to, from, next) {\n    next(vm => {\n      if (from.name) {\n        vm.$router.go()\n      }\n      vm.prevRoute = from\n    })\n  }\n}\n</script>\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=2d2519dc&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}